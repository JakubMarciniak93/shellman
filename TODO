# TODO 
# --------------------------------------------------------------------
# 1. json_diff
# --------------------------------------------------------------------
# Purpose:
#   Compare two JSON files and show key-level differences.
#   Optionally limit the scope to a specific path.
#
# Example usage:
#   shellman json_diff a.json b.json
#   shellman json_diff old.json new.json --path '.users[] | .id'
#
# Flags:
#   --path <jq_expr>     Narrow comparison to a path
#   --ignore-order       Ignore array element order
#   --compact            Output only changed keys/paths
#   --output <file>      Save diff result
# --------------------------------------------------------------------

# --------------------------------------------------------------------
# 2. json_stats
# --------------------------------------------------------------------
# Purpose:
#   Provide quick statistics about the JSON structure:
#   - Number of keys
#   - Number of array elements
#   - Field presence frequency
#   - Top-level key summary
#
# Example usage:
#   shellman json_stats file.json
#
# Flags:
#   --path <jq_expr>     Focus stats on part of the file
#   --output <file>      Save results
# --------------------------------------------------------------------

# --------------------------------------------------------------------
# 3. json_validate
# --------------------------------------------------------------------
# Purpose:
#   Validate JSON structure and detect common issues:
#   - Missing brackets/quotes
#   - Unexpected trailing commas
#   - Invalid UTF-8 sequences
#
# Example usage:
#   shellman json_validate data.json
#
# Flags:
#   --strict             Use strict JSON validation
#   --schema <file>      Validate against JSON Schema (if available)
# --------------------------------------------------------------------