#!/bin/bash

# GÅ‚Ã³wna Å›cieÅ¼ka instalacji Shellmana
SHELLMAN_HOME="${SHELLMAN_HOME:-/usr/local/lib/shellman}"

#
VERSION_FILE="$SHELLMAN_HOME/VERSION"
SHELLMAN_VERSION=$(cat "$VERSION_FILE" 2>/dev/null || echo "unknown")

COMMAND="$1"
shift

# ObsÅ‚uga --version 
if [[ "$COMMAND" == "--version" ]]; then
  echo "Shellman version $SHELLMAN_VERSION"
  exit 0
fi

# ObsÅ‚uga --help lub brak komendy
if [[ "$COMMAND" == "--help" || -z "$COMMAND" ]]; then
  echo -e "\e[36m"
  echo "  _____ _          _ _                            "
  echo " / ____| |        | | |                           "
  echo "| (___ | |__   ___| | | ___ _ __   __ _ _ __ ___  "
  echo "|\\___ \\| '_ \\ / _ \\ | |/ _ \\ '_ \\ / _| | '_ \\ _ \\ "
  echo "|____) | | | |  __/ | |  __/ | | | (_| | | | | | |"
  echo "|_____/|_| |_|\\___|_|_|\\___|_| |_|\\__,_|_| |_| |_|"
  echo -e "\e[0m"

  echo "Shellman â€“ your friendly shell assistant ðŸ’¬"
  echo "Version: $SHELLMAN_VERSION"
  echo ""
  echo "Usage:"
  echo "  shellman <command> [options]"
  echo ""
  echo "Available commands:"
  for cmd in "$SHELLMAN_HOME/commands/"*.sh; do
    if [[ -f "$cmd" ]]; then
      basename "$cmd" .sh
    fi
  done
  echo ""
  echo "Common commands: "
  echo "  count_lines    â†’   Count lines in files with filters"
  echo "  file_stats     â†’   Shows basic information about the file (size, lines, extension)"
  echo "  find_files     â†’   Searches for files by name, content or extension"
  echo "  replace_text   â†’   Replaces text in files with preview and confirmation"
  echo "  merge_files    â†’   Merges multiple text files into one with header and sorting options"
  echo "  encrypt_files  â†’   Encrypts and decrypts files using AES-256 and password"
  echo "  zip_batch      â†’   Creates zip archives from folders or files (also with password)"
  echo "  tail_follow    â†’   Tracks in real time the lines that appear in one file"
  echo "  clean_files    â†’   Delete temp / backup files (dryâ€‘run, age filter)"
  echo "  checksum_files â†’   Generate / verify SHAâ€‘256 or MD5 sums"
  echo "  extract_lines  â†’   Grab lines matching / not matching text (with context)"
  echo "  csv_extract    â†’   Extract selected columns/rows from CSV"
  echo "  excel_info     â†’   List sheets, rows & columns of an Excel file"
  echo "  excel_preview  â†’   Quick preview of Excel data (rows, cols, CSV export)"
  echo "  excel_to_csv   â†’   Export one / many sheets to separate CSV files"
  echo "  excel_diff     â†’   Cellâ€‘level Excel comparison (Markdown / CSV)"
  echo "  json_extract   â†’   Extract and filter JSON using jq expressions"
  echo "  sys_summary    â†’   Shows system, distro, shell and tool versions"
  echo "  sys_summary    â†’   Shows system, distro, shell and tool versions"
  echo "  file_convert   â†’   Convert between JSON, YAML, TOML formats using Python"
  echo "  date_utils     â†’   Work with dates: add/subtract, compare, format (e.g. +5d, -2w)"
  echo "  update         â†’   Update Shellman to the latest local version"
  echo "  line_endings   â†’   Convert CRLF â†” LF line endings (file or directory)"
  echo "  install_bats   â†’   Install BATS testing framework (for developers)"
  echo "  doctor         â†’   Diagnose Shellman installation and structure"
  echo "  --help         â†’   Display help"
  echo "  --version      â†’   Showing Shellman's version"
  echo ""
  echo "Run 'shellman <command> --help' for details."
  exit 0
fi

# ÅšcieÅ¼ka do konkretnej komendy
COMMAND_FILE="$SHELLMAN_HOME/commands/${COMMAND}.sh"

# Wykonanie komendy
if [[ -f "$COMMAND_FILE" ]]; then
    source "$COMMAND_FILE" "$@"
else
    echo "Unknown command: $COMMAND"
    echo "Use 'shellman --help' to list available commands."
    exit 1
fi
